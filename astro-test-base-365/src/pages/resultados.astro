---
import MainLayout from "../layouts/MainLayout.astro"
const PUBLIC_WORDPRESS_API_URL = import.meta.env.PUBLIC_WORDPRESS_API_URL
let s = Astro.url.searchParams.get('s')! || '';
s = s.toString()
//
async function PostsList() {
  const PostsList = await fetch(`${PUBLIC_WORDPRESS_API_URL}`, {
    method: "post",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: `{
        posts(where: {search: "${s}", status: PUBLISH, hasPassword: false}) {
            nodes {
                slug
                title
                isRestricted
                }
            }
        }
            `,
    }),
  });
  const { data } = await PostsList.json();
  return data;
}
const data = await PostsList();

//
// searchParams.delete("page");
const actualPage = Astro.url.searchParams.get('page')! || '1'; 
const perPage = 3
const totalPosts =  data?.posts?.nodes.length || 0
const totalPages = Math.ceil(totalPosts/perPage)
const offset = ( parseInt(actualPage) - 1) * perPage
let showPosts = data?.posts?.nodes.slice(offset, offset + perPage);
---

<MainLayout>
<h1>Resultados de: {s}</h1>
<p>Total de resultados : { totalPosts > 0 ? totalPosts : "0"  }</p>
{
    showPosts?.length < 1 ? (
      <p>No hay resultados</p>
    ) : (
    showPosts?.map(item => (
      !item.isRestricted ? (  
          <h3><a href={`/blog/${item.slug}`}>{item.title}</a></h3>
          ) : null
        
      ))
  )
    }
    <div class="paginador">
    {  
      // Paginacion
      Array.from({ length: totalPages }).map( (page, index) => (
        <a href={`${Astro.url.origin}${Astro.url.pathname}?s=${s}&page=${index + 1}`}>{index + 1}</a>
      ))
    }
  </div>
</MainLayout>